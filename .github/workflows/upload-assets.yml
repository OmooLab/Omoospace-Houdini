name: Upload Assets to Release

on:
  push:
    branches:
      - "release/*"

jobs:
  # draft_release:
  #   name: Draft Release
  #   runs-on: ubuntu-latest
  #   outputs:
  #     upload_url: ${{ steps.draft_release.outputs.upload_url }}
  #     version: ${{ steps.set_env.outputs.version }}
  #   steps:
  #     - name: Set Version Env
  #       id: set_env
  #       run: |
  #         ref_name=${{ github.ref_name }}
  #         echo "version=${ref_name#release/}" >> "$GITHUB_OUTPUT"
  #     - name: Draft Release ${{ steps.set_env.outputs.version }}
  #       id: draft_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ steps.set_env.outputs.version }}
  #         release_name: Release ${{ steps.set_env.outputs.version }}
  #         draft: true

  draft_release:
    name: Draft Release
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
      version: ${{ steps.set_env.outputs.version }}
    steps:
      - name: Set Version Env
        id: set_env
        run: |
          ref_name=${{ github.ref_name }}
          echo "version=${ref_name#release/}" >> "$GITHUB_OUTPUT"
      - name: Draft Release ${{ steps.set_env.outputs.version }}
        uses: release-drafter/release-drafter@v5
        id: draft_release
        with:
          name: ${{ steps.set_env.outputs.version }}
          tag: ${{ steps.set_env.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_assets:
    name: Build Assets
    needs: draft_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip list
      - name: Move Dependencies
        run: |
          mkdir -p PythonLib${{ matrix.python-version }}/Lib
          mv venv/lib/python${{ matrix.python-version }}/site-packages PythonLib${{ matrix.python-version }}/Lib/
          rm -r venv
      - name: Zip Package
        run: |
          zip -r package.zip Packages Preferences PythonLib${{ matrix.python-version }} PythonModules nodes.json README.md
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./package.zip
          asset_name: Omoospace-Houdini_${{ needs.draft_release.outputs.version }}_py${{ matrix.python-version }}.zip
          asset_content_type: application/zip
